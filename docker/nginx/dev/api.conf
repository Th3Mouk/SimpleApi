server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    root /var/www;

    location / {
    #     if ($request_method = OPTIONS) {
    #         add_header Access-Control-Allow-Origin "$http_origin";
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS, DELETE";
    #         add_header Access-Control-Allow-Credentials "true";
    #         add_header Access-Control-Allow-Headers "authorization, origin, content-type, accept";
    #         add_header Content-Length 0;
    #         add_header Content-Type text/plain;
    #         return 200;
    #     }

        # try to serve file directly, but www folder don't exists, request is interpreted by FPM
        try_files $uri @php-fpm;
    }

    location @php-fpm {
        fastcgi_pass php:9000;
        # fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # fastcgi_index index.php;

        # add_header Access-Control-Allow-Origin "$http_origin" always;
        # add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS, DELETE" always;
        # add_header Access-Control-Allow-Credentials "true" always;
        # add_header Access-Control-Allow-Headers "authorization, origin, content-type, accept" always;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param DOCUMENT_ROOT /app/public;
        fastcgi_param SCRIPT_FILENAME /app/public/index.php;
        fastcgi_param SCRIPT_NAME index.php;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    access_log /var/log/nginx/api-access.log ovh;
    error_log /var/log/nginx/api-error.log notice;
}
