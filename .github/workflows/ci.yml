# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prod-install-boot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: '8.1'
          extensions: json

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer production optimized
        run: APP_ENV=prod composer install --prefer-dist --no-progress --no-ansi --no-dev -o -a --apcu-autoloader

  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      database:
        image: "postgres:14-alpine"
        env:
          POSTGRES_USER: "root"
          POSTGRES_PASSWORD: "changeme"
          POSTGRES_DB: "simpleapi_test"

        options: >-
          --health-cmd "pg_isready"
        ports:
          - "5432:5432"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@master
      with:
          php-version: '8.1'
          extensions: json
          coverage: pcov
          tools: cs2pr

#    - name: Composer validate
#      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

    - uses: actions/cache@v2
      with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
              ${{ runner.os }}-composer-

    - name: Composer install
      run: composer install --prefer-dist --no-progress --no-suggest --no-ansi -n

    - name: Rector
      run: vendor/bin/rector --dry-run

    - name: CodeSniffer
      run: vendor/bin/phpcs -q --no-colors --report=checkstyle | cs2pr

    - name: Psalm
      run: vendor/bin/psalm --output-format=github

    - name: PHPStan
      run: vendor/bin/phpstan analyse

    - name: Smoke tests
      run: vendor/bin/pest --testsuite smoke

    - name: Test suites
      run: php vendor/bin/pest --testsuite unit,integration,functional

    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: /tmp/qb-api/clover.xml
        verbose: true

    - name: Mutation testing
      run: |
        git fetch --depth=1 origin main
        vendor/bin/infection --logger-github --git-diff-base=origin/main --git-diff-filter=AM -j$(nproc)
